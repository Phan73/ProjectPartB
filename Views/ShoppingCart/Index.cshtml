@model List<CartItem>
@using System.Globalization
<h2>Shopping Cart</h2>
<script src="https://www.paypal.com/sdk/js?client-id=ATNwtOFAgffDhMfTE8dGXlau9W8Gv82HLENDNmAfobf55lKFzR1u48MWIaTOK4s6V0Rancd7L8HJSox3">
    // Required. Replace SB_CLIENT_ID with your sandbox client ID.
</script>
@if(Model.Count == 0)
{
    <p>Your shopping cart is empty.</p>
}
else{
    <table class="table">
        <thead>
            <tr>
                <th>Car Brand</th>
                <th>Price/per day</th>
                <th>Quantity</th>
                <th>Image</th>
                <th>Subtotal</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Car.Brand</td>
                    <td>@item.Car.RatePerDay.ToString("c", CultureInfo.CurrentCulture)</td>
                    <td>@item.Quantity</td>
                    <td>
                        <img src="@Url.Content("~/uploads/" + item.Car.Image)" alt="Car Image" width="150" height="150" />
                    </td>
                    @*<td><img src="/@item.Product.Image" /></td>*@
                    <td>$@(item.Car.RatePerDay * item.Quantity)</td>
                    <td>
                        <a href="@Url.Action("RemoveFromCart", "ShoppingCart", new { CarDescriptionId  = item.Car.CarDescriptionId })">Remove</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="text-right">
        <strong>Total: @Model.Sum(item => item.Car.RatePerDay * item.Quantity).ToString("c")</strong>
    </div>
    <div class="text-right">
        <a href="@Url.Action("ClearCart", "ShoppingCart")">Clear Cart</a>
        <a asp-controller="CarDescriptions" asp-action="Index">Continue shopping</a>
    </div>


    <input id="GrandTotal" type="hidden" value="@Model.Sum(item => item.Car.RatePerDay * item.Quantity)" />

    <div id="paypal-button-container"></div>
    <script>
        paypal.Buttons({
            createOrder: function (data, actions) {
                // This function sets up the details of the transaction,
                // including the amount and line item details.

                var grandTotal =
                    parseFloat(document.getElementById("GrandTotal").value).toFixed(2).toString();
                //alert("GrandTotal = " + grandTotal);
                return actions.order.create({
                    purchase_units: [{
                        amount: {
                            value: grandTotal
                        }
                    }]
                });
            },
            onApprove: function (data, actions) {
                // This function captures the funds from the transaction.
                return actions.order.capture().then(function (details) {
                    // This function shows a transaction success message to your buyer.
                    alert('Transaction completed by ' + details.payer.name.given_name);
                    window.location.href = '/product/success';
                });
            }

        }).render('#paypal-button-container');
    </script>

}
